{"ast":null,"code":"var _jsxFileName = \"D:\\\\Twitter Dapp\\\\Twitter-Starter\\\\src\\\\pages\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './Settings.css';\nimport { Input } from \"web3uikit\";\nimport pfp1 from \"../images/pfp1.png\";\nimport pfp2 from \"../images/pfp2.png\";\nimport pfp3 from \"../images/pfp3.png\";\nimport pfp4 from \"../images/pfp4.png\";\nimport pfp5 from \"../images/pfp5.png\";\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const pfps = [pfp1, pfp2, pfp3, pfp4, pfp5];\n  const [selectedPFP, setSelectedPFP] = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        name: \"NameChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Bio\",\n        name: \"bioChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Image (Your NFTs)\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: pfps.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e,\n                className: selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\",\n                onClick: () => {\n                  setSelectedPFP(pfps[i]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 15\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"pmXtHDgkDRzZPv5L6dlT184Kb9c=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["D:/Twitter Dapp/Twitter-Starter/src/pages/Settings.js"],"names":["React","Link","Input","pfp1","pfp2","pfp3","pfp4","pfp5","useState","useRef","Settings","pfps","selectedPFP","setSelectedPFP","map","e","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,gBAAP;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAMC,IAAI,GAAG,CAACR,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,IAAzB,CAAb;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,EAA9C;AAEA,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,YAAY,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,YAAY,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,cAPF,eAcE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,6DAGE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBACGG,IAAI,CAACG,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClB,gCACE;AAAA,qCACA;AAAK,gBAAA,GAAG,EAAED,CAAV;AAAa,gBAAA,SAAS,EAAEH,WAAW,KAAKG,CAAhB,GAAoB,mBAApB,GAA0C,WAAlE;AAA+E,gBAAA,OAAO,EAAE,MAAI;AAACF,kBAAAA,cAAc,CAACF,IAAI,CAACK,CAAD,CAAL,CAAd;AAAwB;AAArH;AAAA;AAAA;AAAA;AAAA;AADA,6BADF;AAKD,WANA;AADH;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAiCD,CAtCD;;GAAMN,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Settings.css';\r\nimport { Input } from \"web3uikit\";\r\nimport pfp1 from \"../images/pfp1.png\";\r\nimport pfp2 from \"../images/pfp2.png\";\r\nimport pfp3 from \"../images/pfp3.png\";\r\nimport pfp4 from \"../images/pfp4.png\";\r\nimport pfp5 from \"../images/pfp5.png\";\r\nimport { useState, useRef } from \"react\"\r\n\r\nconst Settings = () => {\r\n  \r\n  const pfps = [pfp1, pfp2, pfp3, pfp4, pfp5];\r\n  const [selectedPFP, setSelectedPFP] = useState();\r\n\r\n  return (\r\n    <>\r\n    <div className=\"pageIdentify\">Settings</div>\r\n    <div className=\"settingsPage\">\r\n      <Input \r\n        label=\"Name\"\r\n        name=\"NameChange\"\r\n        width=\"100%\"\r\n        labelBgColor=\"#141d26\"\r\n      />\r\n      <Input \r\n        label=\"Bio\"\r\n        name=\"bioChange\"\r\n        width=\"100%\"\r\n        labelBgColor=\"#141d26\"\r\n      />\r\n\r\n      <div className=\"pfp\">\r\n        Profile Image (Your NFTs)\r\n\r\n        <div className=\"pfpOptions\">\r\n          {pfps.map((e, i) => {\r\n            return (\r\n              <>\r\n              <img src={e} className={selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\"} onClick={()=>{setSelectedPFP(pfps[i])}} />\r\n              </>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n\r\n"]},"metadata":{},"sourceType":"module"}