{"ast":null,"code":"var _jsxFileName = \"D:\\\\Twitter Dapp\\\\Twitter-Starter\\\\src\\\\pages\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './Settings.css';\nimport { Input } from \"web3uikit\";\nimport pfp1 from \"../images/pfp1.png\";\nimport pfp2 from \"../images/pfp2.png\";\nimport pfp3 from \"../images/pfp3.png\";\nimport pfp4 from \"../images/pfp4.png\";\nimport pfp5 from \"../images/pfp5.png\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const pfps = [pfp1, pfp2, pfp3, pfp4, pfp5];\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  const [theFile, setTheFile] = useState();\n  const [username, setUsername] = useState();\n  const [bio, setBio] = useState();\n  const {\n    Moralis,\n    isAuthenticated,\n    account\n  } = useMoralis();\n  const Web3Api = useMoralisWeb3Api();\n\n  const resolveLink = url => {\n    if (!url || !url, includes(\"ipfs://\")) return url;\n    return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\n  };\n\n  useEffect(() => {\n    const fetchNFTs = async () => {\n      const options = {\n        chain: \"mumbai\",\n        address: account\n      };\n      const mumbaiNFTS = await Web3Api.account.getNFTs(options);\n    };\n  }, [isAuthenticated, account]);\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend(\"_User\");\n    const query = new Moralis.Query(User);\n    const myDetails = await query.first();\n\n    if (bio) {\n      myDetails.set(\"bio\", bio);\n    }\n\n    if (username) {\n      myDetails.set(\"username\", username);\n    }\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      myDetails.set(\"banner\", file.ipfs());\n    }\n\n    await myDetails.save();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        name: \"NameChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Bio\",\n        name: \"bioChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Image (Your NFTs)\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: pfps.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e,\n                className: selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\",\n                onClick: () => {\n                  setSelectedPFP(pfps[i]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 15\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Banner\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            onClick: onBannerClick,\n            className: \"banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            ref: inputFile,\n            onChange: changeHandler,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save\",\n        onClick: () => saveEdits(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"CqgcOty7WTsnLCuU7G8FLl34B8g=\", false, function () {\n  return [useMoralis, useMoralisWeb3Api];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["D:/Twitter Dapp/Twitter-Starter/src/pages/Settings.js"],"names":["React","Link","Input","pfp1","pfp2","pfp3","pfp4","pfp5","useState","useRef","useEffect","defaultImgs","useMoralis","useMoralisWeb3Api","Settings","pfps","selectedPFP","setSelectedPFP","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","username","setUsername","bio","setBio","Moralis","isAuthenticated","account","Web3Api","resolveLink","url","includes","replace","fetchNFTs","options","chain","address","mumbaiNFTS","getNFTs","onBannerClick","current","click","changeHandler","event","img","target","files","URL","createObjectURL","saveEdits","User","Object","extend","query","Query","myDetails","first","set","data","file","File","name","saveIPFS","ipfs","save","window","location","reload","map","e","i","display"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,gBAAP;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,eAA9C;;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAMC,IAAI,GAAG,CAACZ,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,IAAzB,CAAb;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAMU,SAAS,GAAGT,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAACG,WAAW,CAAC,CAAD,CAAZ,CAAhD;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,EAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,EAAxC;AACA,QAAM,CAACiB,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,EAA9B;AACA,QAAM;AAAEmB,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA;AAA5B,MAAwCjB,UAAU,EAAxD;AACA,QAAMkB,OAAO,GAAGjB,iBAAiB,EAAjC;;AAGA,QAAMkB,WAAW,GAAIC,GAAD,IAAS;AAC3B,QAAI,CAACA,GAAD,IAAQ,CAACA,GAAT,EAAaC,QAAQ,CAAC,SAAD,CAAzB,EAAsC,OAAOD,GAAP;AACtC,WAAOA,GAAG,CAACE,OAAJ,CAAY,SAAZ,EAAuB,+BAAvB,CAAP;AACD,GAHD;;AAKAxB,EAAAA,SAAS,CAAC,MAAI;AAEZ,UAAMyB,SAAS,GAAG,YAAY;AAC5B,YAAMC,OAAO,GAAG;AACdC,QAAAA,KAAK,EAAE,QADO;AAEdC,QAAAA,OAAO,EAAET;AAFK,OAAhB;AAKA,YAAMU,UAAU,GAAG,MAAMT,OAAO,CAACD,OAAR,CAAgBW,OAAhB,CAAwBJ,OAAxB,CAAzB;AACD,KAPD;AASD,GAXQ,EAWN,CAACR,eAAD,EAAkBC,OAAlB,CAXM,CAAT;;AAaA,QAAMY,aAAa,GAAG,MAAK;AACzBvB,IAAAA,SAAS,CAACwB,OAAV,CAAkBC,KAAlB;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,UAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAZ;AACA1B,IAAAA,UAAU,CAACwB,GAAD,CAAV;AACA1B,IAAAA,eAAe,CAAC6B,GAAG,CAACC,eAAJ,CAAoBJ,GAApB,CAAD,CAAf;AACD,GAJD;;AAMA,QAAMK,SAAS,GAAG,YAAY;AAC5B,UAAMC,IAAI,GAAGzB,OAAO,CAAC0B,MAAR,CAAeC,MAAf,CAAsB,OAAtB,CAAb;AACA,UAAMC,KAAK,GAAG,IAAI5B,OAAO,CAAC6B,KAAZ,CAAkBJ,IAAlB,CAAd;AACA,UAAMK,SAAS,GAAG,MAAMF,KAAK,CAACG,KAAN,EAAxB;;AAEA,QAAIjC,GAAJ,EAAS;AACPgC,MAAAA,SAAS,CAACE,GAAV,CAAc,KAAd,EAAqBlC,GAArB;AACD;;AAED,QAAIF,QAAJ,EAAc;AACZkC,MAAAA,SAAS,CAACE,GAAV,CAAc,UAAd,EAA0BpC,QAA1B;AACD;;AAED,QAAIF,OAAJ,EAAa;AACX,YAAMuC,IAAI,GAAGvC,OAAb;AACA,YAAMwC,IAAI,GAAG,IAAIlC,OAAO,CAACmC,IAAZ,CAAiBF,IAAI,CAACG,IAAtB,EAA4BH,IAA5B,CAAb;AACA,YAAMC,IAAI,CAACG,QAAL,EAAN;AACAP,MAAAA,SAAS,CAACE,GAAV,CAAc,QAAd,EAAwBE,IAAI,CAACI,IAAL,EAAxB;AACD;;AAED,UAAMR,SAAS,CAACS,IAAV,EAAN;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAtBD;;AAwBA,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,YAAY,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,YAAY,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,cAPF,eAcE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,6DAGE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBACGtD,IAAI,CAACuD,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClB,gCACE;AAAA,qCACA;AAAK,gBAAA,GAAG,EAAED,CAAV;AAAa,gBAAA,SAAS,EAAEvD,WAAW,KAAKuD,CAAhB,GAAoB,mBAApB,GAA0C,WAAlE;AAA+E,gBAAA,OAAO,EAAE,MAAI;AAACtD,kBAAAA,cAAc,CAACF,IAAI,CAACyD,CAAD,CAAL,CAAd;AAAwB;AAArH;AAAA;AAAA;AAAA;AAAA;AADA,6BADF;AAKD,WANA;AADH;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eA4BE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kDAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AACE,YAAA,GAAG,EAAErD,YADP;AAEE,YAAA,OAAO,EAAEsB,aAFX;AAGE,YAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAKI;AAAO,YAAA,IAAI,EAAC,MAAZ;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,GAAG,EAAEvB,SAFP;AAGE,YAAA,QAAQ,EAAE0B,aAHZ;AAIE,YAAA,KAAK,EAAE;AAAE6B,cAAAA,OAAO,EAAE;AAAX;AAJT;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF,eA0CE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,OAAO,EAAE,MAAItB,SAAS,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAmDD,CApHD;;GAAMrC,Q;UAS0CF,U,EAC9BC,iB;;;KAVZC,Q;AAsHN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Settings.css';\r\nimport { Input } from \"web3uikit\";\r\nimport pfp1 from \"../images/pfp1.png\";\r\nimport pfp2 from \"../images/pfp2.png\";\r\nimport pfp3 from \"../images/pfp3.png\";\r\nimport pfp4 from \"../images/pfp4.png\";\r\nimport pfp5 from \"../images/pfp5.png\";\r\nimport { useState, useRef, useEffect } from \"react\"\r\nimport { defaultImgs } from \"../defaultimgs\"\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\n\r\n\r\n\r\nconst Settings = () => {\r\n  \r\n  const pfps = [pfp1, pfp2, pfp3, pfp4, pfp5];\r\n  const [selectedPFP, setSelectedPFP] = useState();\r\n  const inputFile = useRef(null)\r\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1])\r\n  const [theFile, setTheFile] = useState()\r\n  const [username, setUsername] = useState()\r\n  const [bio, setBio] = useState()\r\n  const { Moralis, isAuthenticated, account } = useMoralis();\r\n  const Web3Api = useMoralisWeb3Api();\r\n\r\n\r\n  const resolveLink = (url) => {\r\n    if (!url || !url,includes(\"ipfs://\")) return url; \r\n    return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\")\r\n  }\r\n\r\n  useEffect(()=>{\r\n    \r\n    const fetchNFTs = async () => {\r\n      const options = {\r\n        chain: \"mumbai\",\r\n        address: account\r\n      }\r\n\r\n      const mumbaiNFTS = await Web3Api.account.getNFTs(options)\r\n    }\r\n\r\n  }, [isAuthenticated, account])\r\n\r\n  const onBannerClick = () =>{\r\n    inputFile.current.click()\r\n  }\r\n\r\n  const changeHandler = (event) => {\r\n    const img = event.target.files[0];\r\n    setTheFile(img)\r\n    setSelectedFile(URL.createObjectURL(img))\r\n  }\r\n\r\n  const saveEdits = async () => {\r\n    const User = Moralis.Object.extend(\"_User\")\r\n    const query = new Moralis.Query(User);\r\n    const myDetails = await query.first();\r\n\r\n    if (bio) {\r\n      myDetails.set(\"bio\", bio)\r\n    }\r\n\r\n    if (username) {\r\n      myDetails.set(\"username\", username)\r\n    }\r\n\r\n    if (theFile) {\r\n      const data = theFile;\r\n      const file = new Moralis.File(data.name, data)\r\n      await file.saveIPFS()\r\n      myDetails.set(\"banner\", file.ipfs())\r\n    }\r\n\r\n    await myDetails.save()\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"pageIdentify\">Settings</div>\r\n    <div className=\"settingsPage\">\r\n      <Input \r\n        label=\"Name\"\r\n        name=\"NameChange\"\r\n        width=\"100%\"\r\n        labelBgColor=\"#141d26\"\r\n      />\r\n      <Input \r\n        label=\"Bio\"\r\n        name=\"bioChange\"\r\n        width=\"100%\"\r\n        labelBgColor=\"#141d26\"\r\n      />\r\n\r\n      <div className=\"pfp\">\r\n        Profile Image (Your NFTs)\r\n\r\n        <div className=\"pfpOptions\">\r\n          {pfps.map((e, i) => {\r\n            return (\r\n              <>\r\n              <img src={e} className={selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\"} onClick={()=>{setSelectedPFP(pfps[i])}} />\r\n              </>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pfp\">\r\n          Profile Banner\r\n          <div className=\"pfpOptions\">\r\n            <img\r\n              src={selectedFile}\r\n              onClick={onBannerClick}\r\n              className=\"banner\"></img>\r\n              <input type=\"file\"\r\n                name=\"file\"\r\n                ref={inputFile}\r\n                onChange={changeHandler}\r\n                style={{ display: \"none\"}} />\r\n          </div>\r\n      </div>\r\n      <div className=\"save\" onClick={()=>saveEdits()}>\r\n          Save\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n\r\n"]},"metadata":{},"sourceType":"module"}